name: Release - Google Play

on:
  release:
    types: [ published ]

jobs:
  publish-google-play:
    name: Publish to Google Play Internal Track
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate release tag matches version
        run: |
          if [ ! -f "version.properties" ]; then
            echo "Warning: version.properties not found, skipping validation"
            exit 0
          fi

          source version.properties
          EXPECTED_TAG="v${major}.${minor}.${patch}"

          if [ "${{ github.event.release.tag_name }}" != "$EXPECTED_TAG" ]; then
            echo "Error: Release tag ${{ github.event.release.tag_name }} doesn't match version ${EXPECTED_TAG}"
            exit 1
          fi

          echo "âœ“ Release tag ${{ github.event.release.tag_name }} matches version ${major}.${minor}.${patch}"
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Create secret.properties
        run: echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > secret.properties
      - name: Create google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json
      - name: Decode Keystore
        run: |
          mkdir -p certs
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > certs/release.keystore
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
          cache-read-only: false
      - name: Build release AAB
        run: ./gradlew :app:bundleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      - name: Upload to Google Play Internal Track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.sloy.sevibus
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          releaseName: "${{ github.event.release.name }}"