name: Release - Google Play Internal Track

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-google-play:
    name: Publish to Google Play Internal Track
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Create secret.properties
        run: echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" > secret.properties
      - name: Create google-services.json
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > app/google-services.json
      - name: Decode Keystore
        run: |
          mkdir -p certs
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > certs/release.keystore
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: wrapper
          cache-read-only: false
      - name: Build release AAB
        run: ./gradlew :app:bundleRelease
      - name: Upload to Google Play Internal Track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: com.sloy.sevibus
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          status: draft

  create-github-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish-google-play
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get previous tag
        id: prev-tag
        run: |
          git fetch --tags
          PREV_TAG=$(git tag --sort=-version:refname | sed -n '2p')
          echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT
      - name: Generate release notes
        id: release-notes
        run: |
          if [ -n "${{ steps.prev-tag.outputs.prev_tag }}" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" ${{ steps.prev-tag.outputs.prev_tag }}..${{ github.ref_name }})
          else
            COMMITS=$(git log --pretty=format:"- %s (%h)")
          fi
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Changes in this release:
            
            ${{ steps.release-notes.outputs.commits }}
            
            ---
            This release has been automatically deployed to Google Play Internal Track.
          draft: false
          prerelease: false